//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"loop\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":5,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/phil/Desktop/CustomProjects/Quantum/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"loop\"},\"Attributes\":[],\"SourceFile\":\"/home/phil/Desktop/CustomProjects/Quantum/Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum\",\"Name\":\"zzz\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/phil/Desktop/CustomProjects/Quantum/Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum\",\"Name\":\"zzz\"},\"Attributes\":[],\"SourceFile\":\"/home/phil/Desktop/CustomProjects/Quantum/Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":14}},\"Documentation\":[]}")]
#line hidden
namespace Quantum
{
    [SourceLocation("/home/phil/Desktop/CustomProjects/Quantum/Program.qs", OperationFunctor.Body, 7, 17)]
    public partial class loop : Operation<QVoid, QVoid>, ICallable
    {
        public loop(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "loop";
        String ICallable.FullName => "Quantum.loop";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(loop));
        protected ICallable<QVoid, (Int64,Int64,Int64)> zzz__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 8 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
            foreach (var index in new QRange(0L, 15L))
#line hidden
            {
#line 9 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                var (Re0,Re1,Re2) = zzz__.Apply(QVoid.Instance);
#line 10 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                Message__.Apply(String.Format("{0},{1},{2}", Re0, Re1, Re2));
#line 11 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                if ((Re2 == 1L))
                {
#line 12 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                    Message__.Apply("-----");
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.zzz__ = this.__Factory__.Get<ICallable<QVoid, (Int64,Int64,Int64)>>(typeof(zzz));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<loop, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("/home/phil/Desktop/CustomProjects/Quantum/Program.qs", OperationFunctor.Body, 17, -1)]
    public partial class zzz : Operation<QVoid, (Int64,Int64,Int64)>, ICallable
    {
        public zzz(IOperationFactory m) : base(m)
        {
        }

        public class Out : QTuple<(Int64,Int64,Int64)>, IApplyData
        {
            public Out((Int64,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "zzz";
        String ICallable.FullName => "Quantum.zzz";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit,Qubit)> CCNOT__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<QVoid, (Int64,Int64,Int64)> __Body__ => (__in__) =>
        {
#line 19 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
            var Re0 = 0L;
#line 20 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
            var Re1 = 0L;
#line 21 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
            var Re2 = 0L;
#line hidden
            {
#line 23 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                var q1 = Allocate__.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line hidden
                    {
#line 24 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                        var q2 = Allocate__.Apply();
#line hidden
                        bool __arg2__ = true;
                        try
                        {
#line hidden
                            {
#line 25 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                var q3 = Allocate__.Apply();
#line hidden
                                bool __arg3__ = true;
                                try
                                {
#line 27 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    Microsoft__Quantum__Intrinsic__H.Apply(q1);
#line 28 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    Microsoft__Quantum__Intrinsic__H.Apply(q2);
#line 30 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    CCNOT__.Apply((q1, q2, q3));
#line 32 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    if ((Microsoft__Quantum__Intrinsic__M.Apply(q1) == Result.One))
                                    {
#line 32 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                        Re0 = 1L;
                                    }

#line 33 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    if ((Microsoft__Quantum__Intrinsic__M.Apply(q2) == Result.One))
                                    {
#line 33 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                        Re1 = 1L;
                                    }

#line 34 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    if ((Microsoft__Quantum__Intrinsic__M.Apply(q3) == Result.One))
                                    {
#line 34 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                        Re2 = 1L;
                                    }

#line 35 "/home/phil/Desktop/CustomProjects/Quantum/Program.qs"
                                    return (Re0, Re1, Re2);
                                }
#line hidden
                                catch
                                {
                                    __arg3__ = false;
                                    throw;
                                }
#line hidden
                                finally
                                {
                                    if (__arg3__)
                                    {
#line hidden
                                        Release__.Apply(q3);
                                    }
                                }
                            }
                        }
#line hidden
                        catch
                        {
                            __arg2__ = false;
                            throw;
                        }
#line hidden
                        finally
                        {
                            if (__arg2__)
                            {
#line hidden
                                Release__.Apply(q2);
                            }
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q1);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.CCNOT__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CCNOT));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__((Int64,Int64,Int64) data) => new Out(data);
        public static System.Threading.Tasks.Task<(Int64,Int64,Int64)> Run(IOperationFactory __m__)
        {
            return __m__.Run<zzz, QVoid, (Int64,Int64,Int64)>(QVoid.Instance);
        }
    }
}